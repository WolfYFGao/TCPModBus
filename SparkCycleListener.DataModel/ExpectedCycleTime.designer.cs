#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SparkCycleListener.DataModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MfrMachineDataLaptop")]
	public partial class ExpectedCycleTimeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertExpectedCycleTime(ExpectedCycleTime instance);
    partial void UpdateExpectedCycleTime(ExpectedCycleTime instance);
    partial void DeleteExpectedCycleTime(ExpectedCycleTime instance);
    #endregion
		
		public ExpectedCycleTimeDataContext() : 
				base(global::SparkCycleListener.DataModel.Properties.Settings.Default.MfrMachineDataLaptopConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ExpectedCycleTimeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExpectedCycleTimeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExpectedCycleTimeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExpectedCycleTimeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ExpectedCycleTime> ExpectedCycleTimes
		{
			get
			{
				return this.GetTable<ExpectedCycleTime>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExpectedCycleTime")]
	public partial class ExpectedCycleTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AssetNumber;
		
		private int _ExpectedCycleTime1;
		
		private System.Nullable<decimal> _GracePeriodFactor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAssetNumberChanging(string value);
    partial void OnAssetNumberChanged();
    partial void OnExpectedCycleTime1Changing(int value);
    partial void OnExpectedCycleTime1Changed();
    partial void OnGracePeriodFactorChanging(System.Nullable<decimal> value);
    partial void OnGracePeriodFactorChanged();
    #endregion
		
		public ExpectedCycleTime()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AssetNumber
		{
			get
			{
				return this._AssetNumber;
			}
			set
			{
				if ((this._AssetNumber != value))
				{
					this.OnAssetNumberChanging(value);
					this.SendPropertyChanging();
					this._AssetNumber = value;
					this.SendPropertyChanged("AssetNumber");
					this.OnAssetNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ExpectedCycleTime", Storage="_ExpectedCycleTime1", DbType="Int NOT NULL")]
		public int ExpectedCycleTime1
		{
			get
			{
				return this._ExpectedCycleTime1;
			}
			set
			{
				if ((this._ExpectedCycleTime1 != value))
				{
					this.OnExpectedCycleTime1Changing(value);
					this.SendPropertyChanging();
					this._ExpectedCycleTime1 = value;
					this.SendPropertyChanged("ExpectedCycleTime1");
					this.OnExpectedCycleTime1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GracePeriodFactor", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> GracePeriodFactor
		{
			get
			{
				return this._GracePeriodFactor;
			}
			set
			{
				if ((this._GracePeriodFactor != value))
				{
					this.OnGracePeriodFactorChanging(value);
					this.SendPropertyChanging();
					this._GracePeriodFactor = value;
					this.SendPropertyChanged("GracePeriodFactor");
					this.OnGracePeriodFactorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
